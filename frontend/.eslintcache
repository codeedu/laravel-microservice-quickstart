[{"/var/www/frontend/src/index.tsx":"1","/var/www/frontend/src/reportWebVitals.ts":"2","/var/www/frontend/src/App.tsx":"3","/var/www/frontend/src/components/Navbar/index.tsx":"4","/var/www/frontend/src/components/Navbar/Menu.tsx":"5","/var/www/frontend/src/components/Page.tsx":"6","/var/www/frontend/src/routes/AppRouter.tsx":"7","/var/www/frontend/src/routes/index.tsx":"8","/var/www/frontend/src/pages/Dashboard.tsx":"9","/var/www/frontend/src/pages/category/CategoryList.tsx":"10","/var/www/frontend/src/components/Breadcrumbs.tsx":"11","/var/www/frontend/src/pages/category/components/Table.tsx":"12","/var/www/frontend/src/util/http/index.tsx":"13","/var/www/frontend/src/pages/cast-member/CastMemberList.tsx":"14","/var/www/frontend/src/pages/genre/GenreList.tsx":"15","/var/www/frontend/src/pages/cast-member/components/Table.tsx":"16","/var/www/frontend/src/pages/genre/components/Table.tsx":"17","/var/www/frontend/src/util/http/category-http.ts":"18","/var/www/frontend/src/util/http/http-resource.ts":"19","/var/www/frontend/src/pages/category/CategoryForm.tsx":"20","/var/www/frontend/src/pages/category/components/Form.tsx":"21","/var/www/frontend/src/pages/genre/GenreForm.tsx":"22","/var/www/frontend/src/pages/genre/components/Form.tsx":"23","/var/www/frontend/src/util/http/genre-http.ts":"24","/var/www/frontend/src/pages/cast-member/CastMemberForm.tsx":"25","/var/www/frontend/src/pages/cast-member/components/Form.tsx":"26","/var/www/frontend/src/util/http/cast-member-http.ts":"27","/var/www/frontend/src/theme.ts":"28","/var/www/frontend/src/components/Badge.tsx":"29","/var/www/frontend/src/util/vendor/yup.ts":"30","/var/www/frontend/src/components/SnackbarProvider.tsx":"31","/var/www/frontend/src/components/SubmitAction.tsx":"32","/var/www/frontend/src/components/DefaultForm.tsx":"33","/var/www/frontend/src/components/Table/index.tsx":"34","/var/www/frontend/src/components/Table/FilterResetButton.tsx":"35","/var/www/frontend/src/components/Table/DebouncedTableSearch.js":"36","/var/www/frontend/src/store/filter/index.ts":"37","/var/www/frontend/src/hooks/useFilter.ts":"38"},{"size":500,"mtime":1608764421394,"results":"39","hashOfConfig":"40"},{"size":425,"mtime":1608764421398,"results":"41","hashOfConfig":"40"},{"size":860,"mtime":1608917268929,"results":"42","hashOfConfig":"40"},{"size":955,"mtime":1608764421394,"results":"43","hashOfConfig":"40"},{"size":2212,"mtime":1608919029668,"results":"44","hashOfConfig":"40"},{"size":639,"mtime":1608764421394,"results":"45","hashOfConfig":"40"},{"size":603,"mtime":1608764421398,"results":"46","hashOfConfig":"40"},{"size":2257,"mtime":1608920157918,"results":"47","hashOfConfig":"40"},{"size":224,"mtime":1608764421394,"results":"48","hashOfConfig":"40"},{"size":821,"mtime":1608898541808,"results":"49","hashOfConfig":"40"},{"size":2826,"mtime":1608899586725,"results":"50","hashOfConfig":"40"},{"size":5420,"mtime":1609434386454,"results":"51","hashOfConfig":"40"},{"size":145,"mtime":1608764421398,"results":"52","hashOfConfig":"40"},{"size":836,"mtime":1608898541808,"results":"53","hashOfConfig":"40"},{"size":837,"mtime":1608898541808,"results":"54","hashOfConfig":"40"},{"size":1387,"mtime":1609182546840,"results":"55","hashOfConfig":"40"},{"size":1484,"mtime":1608924279911,"results":"56","hashOfConfig":"40"},{"size":170,"mtime":1608764421398,"results":"57","hashOfConfig":"40"},{"size":1357,"mtime":1609284566280,"results":"58","hashOfConfig":"40"},{"size":413,"mtime":1608906841822,"results":"59","hashOfConfig":"40"},{"size":4818,"mtime":1609182546840,"results":"60","hashOfConfig":"40"},{"size":295,"mtime":1608764421394,"results":"61","hashOfConfig":"40"},{"size":5768,"mtime":1609195762736,"results":"62","hashOfConfig":"40"},{"size":160,"mtime":1608764421398,"results":"63","hashOfConfig":"40"},{"size":294,"mtime":1608764421394,"results":"64","hashOfConfig":"40"},{"size":4792,"mtime":1609182546840,"results":"65","hashOfConfig":"40"},{"size":176,"mtime":1608764421398,"results":"66","hashOfConfig":"40"},{"size":3313,"mtime":1608899466811,"results":"67","hashOfConfig":"40"},{"size":666,"mtime":1608898541808,"results":"68","hashOfConfig":"40"},{"size":307,"mtime":1608905735830,"results":"69","hashOfConfig":"40"},{"size":1081,"mtime":1608917234000,"results":"70","hashOfConfig":"40"},{"size":1149,"mtime":1609182546840,"results":"71","hashOfConfig":"40"},{"size":880,"mtime":1609182546840,"results":"72","hashOfConfig":"40"},{"size":3756,"mtime":1609366328921,"results":"73","hashOfConfig":"40"},{"size":711,"mtime":1609359850994,"results":"74","hashOfConfig":"40"},{"size":2960,"mtime":1609432320467,"results":"75","hashOfConfig":"40"},{"size":2300,"mtime":1609425286787,"results":"76","hashOfConfig":"40"},{"size":379,"mtime":1609434132773,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1b0aqc6",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/frontend/src/index.tsx",[],["160","161"],"/var/www/frontend/src/reportWebVitals.ts",[],"/var/www/frontend/src/App.tsx",[],"/var/www/frontend/src/components/Navbar/index.tsx",[],"/var/www/frontend/src/components/Navbar/Menu.tsx",[],"/var/www/frontend/src/components/Page.tsx",[],"/var/www/frontend/src/routes/AppRouter.tsx",[],"/var/www/frontend/src/routes/index.tsx",[],"/var/www/frontend/src/pages/Dashboard.tsx",[],"/var/www/frontend/src/pages/category/CategoryList.tsx",[],"/var/www/frontend/src/components/Breadcrumbs.tsx",[],"/var/www/frontend/src/pages/category/components/Table.tsx",["162","163","164","165"],"/var/www/frontend/src/util/http/index.tsx",[],"/var/www/frontend/src/pages/cast-member/CastMemberList.tsx",[],"/var/www/frontend/src/pages/genre/GenreList.tsx",[],"/var/www/frontend/src/pages/cast-member/components/Table.tsx",[],"/var/www/frontend/src/pages/genre/components/Table.tsx",["166","167"],"import React, {useEffect, useState} from 'react';\nimport MUIDataTable, {MUIDataTableColumn} from \"mui-datatables\";\nimport httpVideo from \"../../../util/http\";\nimport format from \"date-fns/format\"\nimport parseISO from \"date-fns/parseISO\"\nimport categoryHttp from \"../../../util/http/category-http\";\nimport genreHttp from \"../../../util/http/genre-http\";\n\n\nconst columnsDefinition: MUIDataTableColumn[] = [\n    {\n        name: \"name\",\n        label: \"Nome\"\n    },\n    {\n        name: \"categories\",\n        label: \"Categorias\",\n        options: {\n            customBodyRender(value, tableMeta, updateValue ){\n                return value.map(value => value.name).join(', ')\n            }\n        }\n    },\n    {\n        name: \"created_at\",\n        label: \"Criado em\",\n        options: {\n            customBodyRender(value, tableMeta, updateValue ){\n                return <span>{format(parseISO(value),'dd/MM/yyyy')}</span>\n            }\n        }\n    }\n];\n\ntype Props = {};\nconst Table = (props: Props) => {\n    const [data,setData] = useState([])\n\n    useEffect(() => {\n        let isSubscribed = true;\n        (async () =>{\n            const {data} = await genreHttp.list();\n            if(isSubscribed){\n                setData(data.data)\n            }\n        })();\n        return () => {\n            isSubscribed = false;\n        }\n    },[]);\n    return (\n        <MUIDataTable columns={columnsDefinition} data={data} title={'Listagem de Generos'}/>\n    );\n};\n\nexport default Table;","/var/www/frontend/src/util/http/category-http.ts",[],"/var/www/frontend/src/util/http/http-resource.ts",[],"/var/www/frontend/src/pages/category/CategoryForm.tsx",[],"/var/www/frontend/src/pages/category/components/Form.tsx",[],"/var/www/frontend/src/pages/genre/GenreForm.tsx",[],"/var/www/frontend/src/pages/genre/components/Form.tsx",["168"],"import React, {useEffect, useState} from \"react\";\nimport {MenuItem, TextField} from \"@material-ui/core\";\nimport {useForm} from \"react-hook-form\";\nimport categoryHttp from \"../../../util/http/category-http\";\nimport genreHttp from \"../../../util/http/genre-http\";\nimport {useHistory, useParams} from \"react-router\";\nimport {useSnackbar} from \"notistack\";\nimport * as yup from \"../../../util/vendor/yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport SubmitAction from \"../../../components/SubmitAction\";\nimport {DefaultForm} from \"../../../components/DefaultForm\";\n\ninterface Genre {\n    id: string,\n    name: string,\n    categories_id: string[]\n}\n\nconst SchemaValidation = yup.object({\n    name: yup.string()\n        .label('Nome')\n        .required()\n        .max(255),\n    categories_id: yup.array()\n        .label('Categorias')\n        .required()\n}).defined();\n\n\nconst Form = () => {\n    const history = useHistory();\n    const {id} = useParams<{id: string}>();\n    const snackbar = useSnackbar();\n\n    const [categories,setCategories] = useState<Genre[]>([]);\n    const [genre,setGenre] = useState<Genre | null>(null);\n    const [loading, setLoading] = useState<boolean>(false)\n\n    const {\n        register,\n        handleSubmit,\n        getValues,\n        setValue,\n        watch,\n        errors,\n        reset,\n        trigger\n    } = useForm<Genre>({\n        resolver: yupResolver(SchemaValidation),\n        defaultValues: {\n            categories_id: []\n        }\n    });\n\n    useEffect(() => {\n        register({name: 'categories_id'})\n    },[register])\n\n    useEffect(() => {\n       let isSubscribed = true;\n        (async () =>{\n            setLoading(true);\n            const promise = [categoryHttp.list({queryParam: {all: ''}})];\n            if(id){\n                promise.push(genreHttp.get(id))\n            }\n            try{\n                if(isSubscribed){\n                    const [categoriesResponse, genteResponse] = await Promise.all(promise);\n                    setCategories(categoriesResponse.data.data);\n                    if(id){\n                        setGenre(genteResponse.data.data);\n                        reset({\n                            ...genteResponse.data.data,\n                            categories_id: genteResponse.data.data.categories.map(category => category.id)\n                        });\n                    }\n                }\n            }catch(error){\n                console.error(error);\n                snackbar.enqueueSnackbar(\n                    'Não foi possível carregar as informações',\n                    {variant: 'error'}\n                )\n            }finally {\n                setLoading(false);\n            }\n        })();\n        return() => {\n            isSubscribed = false;\n        }\n    },[]);\n\n    async function onSubmit(formData,event){\n        setLoading(true);\n        try{\n            const http = !genre\n                ?genreHttp.create(formData)\n                :genreHttp.update(genre.id, formData)\n            const {data} = await http;\n            snackbar.enqueueSnackbar(\n                'Gênero salvo com Sucesso',\n                {variant: 'success'}\n            )\n            setTimeout(() => {\n                event ? (\n                        id\n                            ? history.replace(`/genres/${data.data.id}/edit`)\n                            : history.push(`/genres/${data.data.id}/edit`)\n                    )\n                    :history.push('/genres')\n            })\n        }catch(error) {\n            console.log(error);\n            snackbar.enqueueSnackbar(\n                'Não é possível salvar o gênero',\n                {variant: 'error'}\n            )\n        }finally{\n            setLoading(false)\n        }\n    }\n    return (\n        <DefaultForm onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n                name={\"name\"}\n                label={\"Nome\"}\n                fullWidth\n                variant={\"outlined\"}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name?.message}\n                InputLabelProps={{\n                    shrink: true\n                }}\n\n            />\n            <TextField\n                select\n                name={\"categories_id\"}\n                value={watch('categories_id')}\n                label={\"Categorias\"}\n                fullWidth\n                variant={\"outlined\"}\n                margin={\"normal\"}\n                onChange={(e) => {\n                    setValue('categories_id', e.target.value,{ shouldValidate: true })\n                }}\n                SelectProps={{\n                    multiple: true\n                }}\n                disabled={loading}\n                error={errors.categories_id !== undefined}\n               // helperText={errors.categories_id && errors.categories_id.message}\n                InputLabelProps={{\n                    shrink: true\n                }}\n            >\n                <MenuItem value=\"\">\n                    <em>Selecione uma categoria</em>\n                </MenuItem>\n                {\n                    categories.map(\n                        (category,key) => (\n                            <MenuItem key={key} value={category.id}>{category.name}</MenuItem>\n                        )\n                    )\n                }\n            </TextField>\n            <SubmitAction\n                disabledButtons={loading}\n                handleSalve={() => {\n                    trigger().then((valid) => {\n                        valid && onSubmit(getValues(), null)\n                    })\n                }\n                }\n            />\n        </DefaultForm>\n    );\n};\n\nexport default Form;","/var/www/frontend/src/util/http/genre-http.ts",[],"/var/www/frontend/src/pages/cast-member/CastMemberForm.tsx",[],"/var/www/frontend/src/pages/cast-member/components/Form.tsx",[],"/var/www/frontend/src/util/http/cast-member-http.ts",[],"/var/www/frontend/src/theme.ts",[],"/var/www/frontend/src/components/Badge.tsx",[],"/var/www/frontend/src/util/vendor/yup.ts",["169","170","171"],"import {setLocale} from \"yup\";\n\nconst ptBR = {\n    mixed: {\n        required: '${path} é requerido'\n    },\n    string: {\n        max: '${path} precisa ter no máximo ${max} caracteres'\n    },\n    number:{\n        min: '${path} precisa ser no mínimo ${min}'\n    }\n};\n\nsetLocale(ptBR);\n\nexport * from 'yup';","/var/www/frontend/src/components/SnackbarProvider.tsx",[],"/var/www/frontend/src/components/SubmitAction.tsx",[],"/var/www/frontend/src/components/DefaultForm.tsx",[],"/var/www/frontend/src/components/Table/index.tsx",["172"],"import * as React from 'react';\nimport MUIDataTable, {MUIDataTableColumn, MUIDataTableOptions, MUIDataTableProps} from \"mui-datatables\";\nimport {merge,omit, cloneDeep} from 'lodash';\nimport {useTheme, Theme, MuiThemeProvider, debounce} from \"@material-ui/core\";\nimport DebouncedTableSearch from \"./DebouncedTableSearch\";\n\n\nexport interface TableColumn extends MUIDataTableColumn{\n    width?: string\n}\n\nconst makeDefaultOptions = (debauncedSearchTime?): MUIDataTableOptions => ({\n    print: false,\n    download: false,\n    responsive: 'simple',\n    textLabels: {\n        body: {\n            noMatch: 'Nenhum registro encontrado',\n            toolTip: 'Classificar'\n        },\n        pagination: {\n            next: 'Próximo',\n            previous: 'Anterior',\n            rowsPerPage: 'Por página',\n            displayRows: 'de'\n        },\n        toolbar: {\n            search: 'Busca',\n            downloadCsv: 'Download CSV',\n            print: 'Imprimir',\n            viewColumns: 'Ver Colunas',\n            filterTable: 'Filtrar tabela'\n        },\n        filter: {\n            all: 'Todos',\n            title: 'Filtros',\n            reset: 'Limpar'\n        },\n        viewColumns: {\n            title: 'Ver Colunas',\n            titleAria: 'Ver/Esconder'\n        },\n        selectedRows: {\n            delete: 'Excluir',\n            deleteAria: 'Excluir registros selecionados',\n            text: 'registro(s) selecionados'\n        }\n    },\n    customSearchRender: (\n        searchText: string,\n        handleSearch: any,\n        hideSearch: any,\n        options: any\n    ) => {\n        return <DebouncedTableSearch\n            searchText={searchText}\n            onSearch={handleSearch}\n            onHide={hideSearch}\n            options={options}\n            debouceTime={debauncedSearchTime}\n        />\n    }\n})\n\ninterface TableProps extends MUIDataTableProps{\n    columns: TableColumn[];\n    loading?: boolean;\n    debouncedSearchTime?: number;\n\n}\n\n\nconst Table: React.FC<TableProps> = (props) => {\n\n    function extractMuiDataTableColumns(columns: TableColumn[]): Pick<TableColumn, never>[]{\n        setColumnsWithColumns(columns);\n        return columns.map(column => omit(column, 'width'));\n    }\n\n    function setColumnsWithColumns(columns: TableColumn[]){\n        columns.forEach((columns,key) => {\n            if(columns.width){\n                const overrides = theme.overrides as any;\n                overrides.MUIDataTableHeadCell.fixedHeader[`&:nth-child(${key +2})`] = {\n                    width: columns.width\n                }\n            }\n        })\n    }\n\n\n    function getOriginalMuiDataTableProps(){\n        return omit(newProps,'loading');\n    }\n\n    function applyLoading(){\n        const textLabels = (newProps.options as any).textLabels;\n        textLabels.body.noMatch = newProps.loading === true\n        ? 'Carregando...' : textLabels.body.noMatch\n    }\n\n    const defaultOptions = makeDefaultOptions(props.debouncedSearchTime)\n    const theme = cloneDeep<Theme>(useTheme());\n    const newProps = merge(\n        {options: cloneDeep(defaultOptions)},\n        props,\n        {columns: extractMuiDataTableColumns(props.columns)}\n    );\n\n    applyLoading();\n    getOriginalMuiDataTableProps();\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <MUIDataTable {...newProps}/>\n        </MuiThemeProvider>\n    );\n};\n\nexport default Table;\n\nexport function makeActionStyles(column){\n    return theme => {\n        const copyTheme = cloneDeep(theme);\n        const selector = `&[data-testid^=\"MuiDataTableBodyCell-${column}\"]`;\n        (copyTheme.overrides as any).MUIDataTableBodyCell.root[selector] = {\n            paddingTop: '0px',\n            paddingBottom: '0px'\n        }\n        return copyTheme;\n    }\n}","/var/www/frontend/src/components/Table/FilterResetButton.tsx",["173"],"import React from 'react';\nimport {IconButton, Tooltip} from \"@material-ui/core\";\nimport {ClearAll} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    iconButton: (theme as any).overrides.MUIDataTableToolbar.icon\n}))\n\ninterface FilterResetButton {\n    handleClick: () => void\n}\n\nconst FilterResetButton: React.FC<FilterResetButton> = (props) => {\n    const classes = useStyles();\n    return (\n        <Tooltip title={'Limpar Busca'}>\n            <IconButton className={classes.iconButton} onClick={props.handleClick}>\n                <ClearAll/>\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport default FilterResetButton;","/var/www/frontend/src/components/Table/DebouncedTableSearch.js",["174","175"],"/var/www/frontend/src/store/filter/index.ts",[],"/var/www/frontend/src/hooks/useFilter.ts",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":37},{"ruleId":"180","severity":1,"message":"184","line":13,"column":8,"nodeType":"182","messageId":"183","endLine":13,"endColumn":15},{"ruleId":"180","severity":1,"message":"185","line":13,"column":18,"nodeType":"182","messageId":"183","endLine":13,"endColumn":31},{"ruleId":"186","severity":1,"message":"187","line":90,"column":7,"nodeType":"188","endLine":95,"endColumn":6,"suggestions":"189"},{"ruleId":"180","severity":1,"message":"190","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":17},{"ruleId":"180","severity":1,"message":"191","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":20},{"ruleId":"186","severity":1,"message":"192","line":92,"column":7,"nodeType":"188","endLine":92,"endColumn":9,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":5,"column":19,"nodeType":"196","messageId":"197","endLine":5,"endColumn":40},{"ruleId":"194","severity":1,"message":"195","line":8,"column":14,"nodeType":"196","messageId":"197","endLine":8,"endColumn":63},{"ruleId":"194","severity":1,"message":"195","line":11,"column":14,"nodeType":"196","messageId":"197","endLine":11,"endColumn":52},{"ruleId":"180","severity":1,"message":"198","line":4,"column":44,"nodeType":"182","messageId":"183","endLine":4,"endColumn":52},{"ruleId":"199","severity":1,"message":"200","line":15,"column":7,"nodeType":"182","messageId":"201","endLine":15,"endColumn":53},{"ruleId":"186","severity":1,"message":"202","line":39,"column":30,"nodeType":"182","endLine":39,"endColumn":41},{"ruleId":"186","severity":1,"message":"203","line":59,"column":7,"nodeType":"188","endLine":59,"endColumn":29,"suggestions":"204"},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'reducer' is defined but never used.","'INITIAL_STATE' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["207"],"'httpVideo' is defined but never used.","'categoryHttp' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'reset', and 'snackbar'. Either include them or remove the dependency array.",["208"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'debounce' is defined but never used.","@typescript-eslint/no-redeclare","'FilterResetButton' is already defined.","redeclared","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has a missing dependency: 'onHide'. Either include it or remove the dependency array. If 'onHide' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [filterState.search, filterState.pagination.page, filterState.pagination.per_page, filterState.order, getData]",{"range":"216","text":"217"},"Update the dependencies array to be: [id, reset, snackbar]",{"range":"218","text":"219"},"Update the dependencies array to be: [searchText, onSearch, onHide]",{"range":"220","text":"221"},[2579,2718],"[filterState.search, filterState.pagination.page, filterState.pagination.per_page, filterState.order, getData]",[2787,2789],"[id, reset, snackbar]",[1625,1647],"[searchText, onSearch, onHide]"]